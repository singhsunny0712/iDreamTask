{"version":3,"sources":["components/Login.js","components/SignUp.js","components/LandingPage.js","components/Card.js","components/Home.js","App.js","index.js"],"names":["validation_Schema","yup","email","required","password","Login","history","useHistory","useEffect","JSON","parse","localStorage","getItem","push","React","useState","amount","weight","weightRange","showPassword","value","setValues","checked","setChecked","handleChange1","event","removeItem","setItem","handleClickShowPassword","handleMouseDownPassword","preventDefault","className","initialValues","validationSchema","onSubmit","values","actions","stringify","fetch","method","headers","body","then","res","json","data","error","console","log","token","user","catch","err","postData","errors","touched","handleChange","handleBlur","handleSubmit","Box","component","sx","mt","mb","width","noValidate","autoComplete","TextField","id","label","variant","onBlur","onChange","style","color","FormControl","InputLabel","htmlFor","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","FormControlLabel","control","Checkbox","name","full_name","matches","min","changeFlagState","reshowPassword","handleClickShowPasswordre","rePassword","fullName","LandingPage","flag","setflag","title","description","BasicCard","heading","taskData","settaskData","open","setOpen","open1","setOpen1","open2","setOpen2","editid","setid","deleteid","setdeleteid","editTitleData","setTitleData","editDesData","setDesData","handleClose2","result","filterData","filter","item","_id","handleClose1","a","status","userid","task","taskid","updatetitle","editTitle","x","editDescription","Card","minWidth","minHeight","class","length","Button","Dialog","onClose","callApi","multiline","maxRows","map","size","handleClickOpen1","fontSize","handleClickOpen2","DialogActions","autoFocus","EditApi","Home","tasks","handleClose","maxWidth","bgcolor","List","ListItem","disablePadding","ListItemButton","ListItemIcon","ListItemText","primary","display","alignItems","mr","my","Routing","exact","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84cedc95.chunk.js","sourcesContent":["import React, { useEffect} from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport Box from '@mui/material/Box';\r\nimport { Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst validation_Schema = yup.object({\r\n      email: yup.string()\r\n      .email(\"Please enter a valid Email\")\r\n      .required(\"Email is required\"),\r\n      password: yup.string().required(\"Password is required\")\r\n\r\n})\r\n\r\n\r\nconst Login = () => {\r\n\r\n      const history = useHistory();\r\n     // const {state,dispatch}=useContext(UserContext);\r\n      useEffect(()=>{\r\n      const user =JSON.parse( localStorage.getItem(\"user\"));\r\n        if(user){\r\n         // dispatch({type:\"USER\",payload:user})\r\n           history.push('/home');\r\n         }else{\r\n         history.push('/');\r\n\r\n         }\r\n      },[])\r\n\r\n      const [value, setValues] = React.useState({\r\n            amount: '',\r\n            password: '',\r\n            weight: '',\r\n            weightRange: '',\r\n            showPassword: false,\r\n          });\r\n          const [checked, setChecked] = React.useState(localStorage.getItem('RMe')==='marked'?true:false);\r\n          const handleChange1 = (event) => {\r\n                  // setChecked(event.target.checked);\r\n                  if(localStorage.getItem('RMe')==='marked'){\r\n                    setChecked(false);\r\n                    localStorage.removeItem('RMData');\r\n                  }else{\r\n                    setChecked(true);\r\n\r\n                  }\r\n                  \r\n                  \r\n                  // checked?console.log(checked,\"unmarked\"):console.log(checked,\"marked\")\r\n\r\n                  checked?localStorage.removeItem('RMe'):localStorage.setItem(\"RMe\",\"marked\");\r\n                  // localStorage.setItem(\"RMData\",false);\r\n            };\r\n        \r\n          const handleClickShowPassword = () => {\r\n            //     console.log(values);\r\n            setValues({\r\n              ...value,\r\n              showPassword: !value.showPassword,\r\n            });\r\n          };\r\n        \r\n          const handleMouseDownPassword = (event) => {\r\n            event.preventDefault();\r\n          };\r\n\r\n          \r\n          //------------------call api ------------------//\r\n          const postData = (value) => {\r\n                // console.log(value);\r\n\r\n                if(localStorage.getItem('RMe')==='marked'){\r\n                  localStorage.setItem(\"RMData\",JSON.stringify(value));\r\n                }\r\n\r\n                fetch(\"/signin\",{\r\n                  method:\"post\",\r\n                  headers:{\r\n                      \"Content-Type\":\"application/json\"\r\n                  },\r\n                  body:JSON.stringify({\r\n                     email:value.email,\r\n                     password:value.password\r\n                  })\r\n              }).then(res=>res.json())\r\n              .then(data => {\r\n                  if(data.error){    \r\n                      // M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n                      console.log(data.error)\r\n                  }else{\r\n                      console.log(data);\r\n                      localStorage.setItem(\"jwt\",data.token)\r\n                      localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                      // dispatch({type:\"USER\",payload:data.user})\r\n                      // M.toast({html: \"Signedin Success\",classes:\"#43a047 green darken-3\"})\r\n\r\n                      history.push('/home')\r\n                  }\r\n              }).catch(err =>{\r\n                  console.log(err,value.email);\r\n              })\r\n\r\n          }\r\n      return (\r\n            <div> \r\n           <div className=\"container pt-5\">\r\n                 <div className=\"row justify-content-center\">\r\n                  <div className=\"col-8\">\r\n                  <hr className=\"divider\"/>\r\n                  <h2>To continue</h2>\r\n                 <h6>We need your name & email </h6>\r\n                 <Formik\r\n              initialValues={{ email: localStorage.getItem('RMe')==='marked' && localStorage.getItem('RMData')  ? JSON.parse(localStorage.getItem('RMData')).email:'', password: localStorage.getItem('RMe')==='marked' && localStorage.getItem('RMData')  ? JSON.parse(localStorage.getItem('RMData')).password:'',}}\r\n              validationSchema={validation_Schema}\r\n                onSubmit={(values, actions) => {\r\n                  // console.log(values);\r\n                  postData(values)\r\n                  // actions.resetForm(); \r\n                }}\r\n              >\r\n                {\r\n                  ({ errors, touched ,handleChange, handleBlur, values, handleSubmit }) => (\r\n                  <Box\r\n                        component=\"form\"\r\n                        sx={{\r\n                        '& > :not(style)': { mt: 1,mb: 1, width: '35ch' },\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                  >\r\n                  <TextField \r\n                 id=\"outlined-basic\" \r\n                 label=\"Email\" \r\n                 variant=\"outlined\"\r\n                 className=\"inputRounded\"\r\n                 onBlur={handleBlur('email')}\r\n                onChange={handleChange('email')}\r\n                value={localStorage.getItem('RMe')==='marked' && localStorage.getItem('RMData')  ? JSON.parse(localStorage.getItem('RMData')).email:values.email}\r\n                 />\r\n                 {touched.email && errors.email ?   <h6 style={{color: 'red'}}>{errors.email}</h6> : null}\r\n                  <FormControl className=\"inputRounded\" variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                  <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        type={value.showPassword ? 'text' : 'password'}\r\n                        value={localStorage.getItem('RMe')==='marked' && localStorage.getItem('RMData')  ? JSON.parse(localStorage.getItem('RMData')).password:values.password}\r\n                        onChange={handleChange('password')}\r\n                        onBlur={handleBlur('password')}\r\n                        endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPassword}\r\n                              onMouseDown={handleMouseDownPassword}\r\n                              edge=\"end\"\r\n                        >\r\n                              {value.showPassword===false ? <VisibilityOff /> : <Visibility />}\r\n                        </IconButton>\r\n                        </InputAdornment>\r\n                        }\r\n                        label=\"Password\"\r\n                  />\r\n                  {touched.password && errors.password ?   <h6 style={{color: 'red'}}>{errors.password}</h6> : null}\r\n                  </FormControl>\r\n                  <button className=\"button1st\" type=\"button\" onClick={() => handleSubmit()}>Login</button>\r\n\r\n                  <FormControlLabel\r\n                        control={\r\n                        <Checkbox checked={checked} onChange={handleChange1} name=\"jason\" />\r\n                        }\r\n                        label=\"Remember me\"\r\n                  />\r\n                 </Box>\r\n                 )}\r\n              </Formik>\r\n                  </div>\r\n                 </div>\r\n\r\n           </div>\r\n            </div>\r\n      )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport Box from '@mui/material/Box';\r\nimport { Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nconst validation_Schema = yup.object({\r\n      full_name: yup.string().required(\"Full name is required\").matches(/^[a-zA-Z ]+$/, \"Only characters are allowed\").min(3, \"must be atleast 3 characters\"),\r\n      email: yup.string()\r\n      .email(\"Please enter a valid Email\")\r\n      .required(\"Email is required\"),\r\n      // password: yup.string()\r\n      // .required(\"Please enter a password\")\r\n      // .matches(/^(?=.[A-Za-z])(?=.\\d)[A-Za-z\\d]{8,}$/,\"Minimum eight characters, at least one letter and one number\")\r\n      // .min(8, \"Password must be at least 8 characters\"),\r\n      // rePassword: yup.string()\r\n      // .required(\"Please confirm your password\")\r\n      // .when(\"password\", {\r\n      //   is: val => (val && val.length > 0 ? true : false),\r\n      //   then: yup.string().oneOf(\r\n      //     [yup.ref(\"password\")],\r\n      //     \"Passwords must match\"\r\n      //   )\r\n      // })\r\n\r\n})\r\n\r\n\r\nconst Login = ({changeFlagState}) => {\r\n      const [value, setValues] = React.useState({\r\n            amount: '',\r\n            password: '',\r\n            weight: '',\r\n            weightRange: '',\r\n            showPassword: false,\r\n            reshowPassword: false,\r\n          });\r\n\r\n           const [checked, setChecked] = React.useState(localStorage.getItem('RMe')==='marked'?true:false);\r\n\r\n            const handleChange1 = (event) => {\r\n                  if(localStorage.getItem('RMe')==='marked'){\r\n                        setChecked(false);\r\n                        localStorage.removeItem('RMData');\r\n                  }else{\r\n                        setChecked(true);\r\n\r\n                  }\r\n            //  setChecked(event.target.checked);\r\n             checked?localStorage.removeItem('RMe'):localStorage.setItem(\"RMe\",\"marked\");\r\n            };\r\n      \r\n        \r\n          const handleClickShowPassword = () => {\r\n            setValues({\r\n              ...value,\r\n              showPassword: !value.showPassword,\r\n            });\r\n            \r\n          };\r\n          const handleClickShowPasswordre = () => {\r\n            setValues({\r\n              ...value,\r\n              reshowPassword: !value.reshowPassword,\r\n            });\r\n            \r\n          };\r\n        \r\n          const handleMouseDownPassword = (event) => {\r\n            event.preventDefault();\r\n          };\r\n\r\n          ///-------------api call -------------------///\r\n          const postData = (value) => {\r\n            //     console.log(\"post\", value)\r\n                \r\n            if(localStorage.getItem('RMe')==='marked'){\r\n                  localStorage.setItem(\"RMData\",JSON.stringify(value));\r\n            }\r\n\r\n                fetch(\"/signup\",{\r\n                  method:\"post\",\r\n                  headers:{\r\n                      \"Content-Type\":\"application/json\"\r\n                  },\r\n                  body:JSON.stringify({\r\n                     fullName:value.full_name,\r\n                     email:value.email,\r\n                     password:value.rePassword\r\n                  })\r\n              }).then(res=>res.json())\r\n              .then(data => {\r\n                  if(data.error){    \r\n                      // M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n                      console.log(data.error)\r\n                  }else{\r\n                      console.log(data);\r\n                      changeFlagState(\"login\");\r\n                     //  localStorage.setItem(\"jwt\",data.token)\r\n                     //  localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                      // dispatch({type:\"USER\",payload:data.user})\r\n                      // M.toast({html: \"Signedin Success\",classes:\"#43a047 green darken-3\"})\r\n                      // history.push('/')\r\n                  }\r\n              }).catch(err =>{\r\n                  console.log(err,value.email);\r\n              })\r\n      \r\n            \r\n\r\n          }\r\n          \r\n      return (\r\n            <div> \r\n           <div className=\"container pt-5\">\r\n                 <div className=\"row justify-content-center\">\r\n                  <div className=\"col-8\">\r\n                  <hr className=\"divider\"/>\r\n                 <Formik\r\n              initialValues={{ full_name: '', email: '', password: '', rePassword: ''}}\r\n              validationSchema={validation_Schema}\r\n                onSubmit={(values, actions) => {\r\n                  console.log(values);\r\n                  postData(values)\r\n                  // actions.resetForm(); \r\n                }}\r\n              >\r\n                {\r\n                  ({ errors, touched ,handleChange, handleBlur, values, handleSubmit }) => (\r\n                  <Box\r\n                        component=\"form\"\r\n                        sx={{\r\n                        '& > :not(style)': { mt: 1,mb: 1, width: '35ch' },\r\n                        }}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                  >\r\n                  <TextField \r\n                 id=\"outlined-basic\" \r\n                 label=\"Full Name\" \r\n                 variant=\"outlined\"\r\n                 className=\"inputRounded\"\r\n                 onBlur={handleBlur('full_name')}\r\n                onChange={handleChange('full_name')}\r\n                value={values.full_name}\r\n                 />\r\n                 {touched.full_name && errors.full_name ?   <h6 style={{color: 'red'}}>{errors.full_name}</h6> : null}\r\n\r\n                  <TextField \r\n                 id=\"outlined-basic\" \r\n                 label=\"Email\" \r\n                 variant=\"outlined\"\r\n                 className=\"inputRounded\"\r\n                 onBlur={handleBlur('email')}\r\n                onChange={handleChange('email')}\r\n                value={values.email}\r\n                 />\r\n                 {touched.email && errors.email ?   <h6 style={{color: 'red'}}>{errors.email}</h6> : null}\r\n                  <FormControl className=\"inputRounded\" variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                  <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        type={value.showPassword ? 'text' : 'password'}\r\n                        value={values.password}\r\n                        onChange={handleChange('password')}\r\n                        onBlur={handleBlur('password')}\r\n                        endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPassword}\r\n                              onMouseDown={handleMouseDownPassword}\r\n                              edge=\"end\"\r\n                        >\r\n                              {value.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                        </InputAdornment>\r\n                        }\r\n                        label=\"Psword\"\r\n                  />\r\n                  {touched.password && errors.password ?   <h6 style={{color: 'red'}}>{errors.password}</h6> : null}\r\n                  </FormControl>\r\n                  <FormControl className=\"inputRounded\" variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">Re-Password</InputLabel>\r\n                  <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        type={value.reshowPassword ? 'text' : 'password'}\r\n                        value={values.rePassword}\r\n                        onChange={handleChange('rePassword')}\r\n                        onBlur={handleBlur('rePassword')}\r\n                        endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPasswordre}\r\n                              onMouseDown={handleMouseDownPassword}\r\n                              edge=\"end\"\r\n                        >\r\n                              {value.reshowPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                        </InputAdornment>\r\n                        }\r\n                        label=\"Psword\"\r\n                  />\r\n                  {touched.rePassword && errors.rePassword ?   <h6 style={{color: 'red'}}>{errors.rePassword}</h6> : null}\r\n                  </FormControl>\r\n                  <button className=\"button1st\" type=\"button\" onClick={() => handleSubmit()}>Sign Up</button>\r\n                  <FormControlLabel\r\n                        control={\r\n                        <Checkbox checked={checked} onChange={handleChange1} name=\"jason\" />\r\n                        }\r\n                        label=\"Remember me\"\r\n                  />\r\n                 </Box>\r\n                 )}\r\n              </Formik>\r\n                  </div>\r\n                 </div>\r\n\r\n               \r\n           </div>\r\n            </div>\r\n      )\r\n}\r\n\r\nexport default Login","// import { Logout } from \"@mui/icons-material\";\r\nimport React, { useState } from \"react\";\r\nimport LOGIN from \"./Login\";\r\nimport SIGNUP from \"./SignUp\";\r\n\r\nconst LandingPage = () => {\r\n  const [flag, setflag] = useState(\"login\");\r\n\r\n  function changeFlagState(data) {\r\n    setflag(data);\r\n  }\r\n\r\n  // const [toggle, setToggle] = useState(\"login\");\r\n  // const handleClick = () => {\r\n  //       if(toggle) {\r\n  //             setToggle(false)\r\n  //       } else {\r\n  //             setToggle(true)\r\n  //       }\r\n  // }\r\n  return (\r\n    <div>\r\n      <div className=\"row p-5\">\r\n        <div className=\"col-md-6\">\r\n          <h1>Image</h1>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"mainCard p-5\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\">\r\n                <button\r\n                  className=\"btn1\"\r\n                  onClick={() => changeFlagState(\"login\")}\r\n                >\r\n                  <h2>Login</h2>\r\n                </button>\r\n                <hr className=\"upperDivider\" />\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <button\r\n                  className=\"btn1\"\r\n                  onClick={() => changeFlagState(\"signin\")}\r\n                >\r\n                  <h2>Sign up</h2>\r\n                </button>\r\n                <hr className=\"upperDivider\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              {flag === \"login\" ? <LOGIN /> : <SIGNUP changeFlagState={changeFlagState}/>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport AddRoundedIcon from \"@mui/icons-material/AddRounded\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validation_Schema = yup.object({\r\n  title: yup.string().required(\"title is required\"),\r\n  description: yup.string().required(\"description is required\"),\r\n});\r\n\r\nexport default function BasicCard({ heading, id, taskData ,settaskData}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [open1, setOpen1] = React.useState(false);\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  const [editid, setid] = React.useState(\"\");\r\n  const [deleteid, setdeleteid] = React.useState(\"\");\r\n  const [editTitleData, setTitleData] = React.useState(\"\");\r\n  const [editDesData, setDesData] = React.useState(\"\");\r\n\r\n  const handleClickOpen2 = (x) => {\r\n    // console.log(\"first time true\",x._id)\r\n    setdeleteid(x._id);\r\n    setOpen2(true);\r\n  };\r\n  \r\n  const handleClose2 = (flag) => {\r\n    if(flag==='Y'){\r\n\r\n      // console.log(deleteid)\r\n\r\n      fetch(`/deletetask/${deleteid}`, {\r\n        method: \"delete\",\r\n        headers: {\r\n          \"Authorization\": \"iCareerD \" + localStorage.getItem(\"jwt\")\r\n        }\r\n      }).then(res => res.json())\r\n        .then(result => {\r\n  \r\n          // console.log(result);\r\n          // console.log(taskData);\r\n          let filterData= taskData.filter(item=>item._id !== result._id)\r\n          // console.log(filterData);\r\n          settaskData(filterData)\r\n          // console.log(taskData);\r\n        }).catch(err => {\r\n          console.log(err);\r\n        })\r\n      \r\n    }\r\n    setOpen2(false);\r\n    // console.log(flag);\r\n    // console.log(open2);\r\n};\r\n\r\n  const handleClickOpen = () => {\r\n    // console.log(x)\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClickOpen1 = (x) => {\r\n    // console.log(\"edditt\",x.description)\r\n\r\n    setid(x._id);\r\n    setTitleData(x.title);\r\n    setDesData(x.description);\r\n    setOpen1(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClose1 = () => {\r\n    setid(\"\");\r\n    setTitleData(\"\");\r\n    setDesData(\"\");\r\n    setOpen1(false);\r\n  };\r\n\r\n\r\n  async function callApi(values) {\r\n    values.status = id;\r\n\r\n    await fetch(\"/addtask\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"iCareerD \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        userid: JSON.parse(localStorage.getItem(\"user\"))._id,\r\n        title: values.title,\r\n        description: values.description,\r\n        status: id,\r\n      }),\r\n     })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          // M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n          console.log(data.error);\r\n        } else {\r\n          // console.log(data.task);\r\n          taskData.push(data.task);\r\n          // console.log(taskData);\r\n          // window.location.reload();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n     // taskData.push(values)\r\n     // console.log(taskData);\r\n     setOpen(false);\r\n     ////--------------------API Call --------------------------------------------------\r\n  }\r\n\r\n  ///---------------api for edit --------------------------------------\r\n  async function EditApi(values, id) {\r\n    // console.log(values, id);\r\n\r\n    await fetch(\"/titleupdate\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"iCareerD \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        taskid: id,\r\n        updatetitle: values.editTitle,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          // M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n          console.log(data.error);\r\n        } else {\r\n          taskData.filter((x) => x._id === id)[0].title = values.editTitle;\r\n          // console.log(data.task);\r\n          // taskData.push(data.task)\r\n          // console.log(taskData);\r\n          // window.location.reload();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    await fetch(\"/desupdate\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"iCareerD \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        taskid: id,\r\n        description: values.editDescription,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          // M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n          console.log(data.error);\r\n        } else {\r\n          taskData.filter((x) => x._id === id)[0].description =\r\n            values.editDescription;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // console.log(taskData.filter(x => x._id === id))\r\n    // console.log(taskData)\r\n    setOpen1(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(\"test\")\r\n  }, [open, open1,open2]);\r\n\r\n  return (\r\n    <Card\r\n      sx={{ minWidth: 275, minHeight: 600 }}\r\n      className=\"card_bg_color p-4\"\r\n      id={id}\r\n    >\r\n      <div class=\"d-flex justify-content-between\">\r\n        <h6>{heading}</h6>\r\n        <h6 className=\"digit\">\r\n          {taskData.filter((x) => x.status === id).length}\r\n        </h6>\r\n      </div>\r\n      <Button className=\"addto_btn\" onClick={handleClickOpen}>\r\n        <AddRoundedIcon />\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <Formik\r\n          initialValues={{ title: \"\", description: \"\" }}\r\n          validationSchema={validation_Schema}\r\n          onSubmit={(values, actions) => {\r\n            console.log(values);\r\n            callApi(values);\r\n          }}\r\n        >\r\n          {({\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            values,\r\n            handleSubmit,\r\n          }) => (\r\n            <div className=\"row m-5\">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                variant=\"standard\"\r\n                className=\"p-4\"\r\n                onBlur={handleBlur(\"title\")}\r\n                onChange={handleChange(\"title\")}\r\n                value={values.title}\r\n              />\r\n              {touched.title && errors.title ? (\r\n                <h6 style={{ color: \"red\" }}>{errors.title}</h6>\r\n              ) : null}\r\n              <TextField\r\n                id=\"outlined-multiline-flexible\"\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                multiline\r\n                maxRows={4}\r\n                className=\"p-4\"\r\n                variant=\"standard\"\r\n                onBlur={handleBlur(\"description\")}\r\n                onChange={handleChange(\"description\")}\r\n                value={values.description}\r\n              />\r\n              {touched.description && errors.description ? (\r\n                <h6 style={{ color: \"red\" }}>{errors.description}</h6>\r\n              ) : null}\r\n\r\n              <Button onClick={handleSubmit}>Add</Button>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n      <div className=\"row pt-4 pb-4 pl-4 pr-4\">\r\n        {taskData\r\n          .filter((x) => x.status === id)\r\n          .map((x) => {\r\n            return (\r\n              <Card sx={{ minWidth: 275 }} className=\"p-4 m-2\" id={x._id}>\r\n                {/* <button onClick={() => handleClickOpen1(x)} id={x._id}>\r\n                  edit\r\n                </button> */}\r\n                <div id='iconplace'>\r\n                   <h4 >{x.title}</h4>\r\n                   <IconButton aria-label=\"edit\" size=\"small\" onClick={() => handleClickOpen1(x)} id={x._id} >\r\n                     <EditIcon fontSize=\"inherit\" />\r\n                   </IconButton>\r\n                   <IconButton aria-label=\"delete\" size=\"small\" onClick={() => handleClickOpen2(x)} id='deletebutton'>\r\n                     <DeleteIcon fontSize=\"inherit\" />\r\n                   </IconButton>\r\n                   <Dialog\r\n                                                open={open2}\r\n                                                onClose={handleClose2}\r\n                                                aria-labelledby=\"alert-dialog-title\"\r\n                                                aria-describedby=\"alert-dialog-description\"\r\n                                                >\r\n                                                <div className=\"p-5\">\r\n                                                <h1>Do you Want to Delete Task</h1>\r\n                                                <DialogActions>\r\n                                                <Button onClick={()=>handleClose2('Y')}>Yes</Button>\r\n                                                <Button onClick={()=>handleClose2('N')} autoFocus>\r\n                                                      No\r\n                                                </Button>\r\n                                                </DialogActions>\r\n                                                </div>\r\n                   </Dialog>\r\n                </div>\r\n                <hr></hr>\r\n                {/* <br></br> */}\r\n                <h6>{x.description}</h6>\r\n                {/* //////------------------mapping------------------------//// */}\r\n                <Dialog\r\n                  open={open1}\r\n                  onClose={handleClose1}\r\n                  aria-labelledby=\"alert-dialog-title\"\r\n                  aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                  <Formik\r\n                    initialValues={{\r\n                      editTitle: editTitleData,\r\n                      editDescription: editDesData,\r\n                    }}\r\n                    onSubmit={(values, actions) => {\r\n                      // console.log(values);\r\n                      EditApi(values, editid);\r\n                    }}\r\n                  >\r\n                    {({\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      values,\r\n                      handleSubmit,\r\n                    }) => (\r\n                      <div className=\"row m-5\">\r\n                        <TextField\r\n                          id=\"outlined-basic\"\r\n                          name=\"title\"\r\n                          label=\"Title\"\r\n                          variant=\"standard\"\r\n                          className=\"p-4\"\r\n                          onBlur={handleBlur(\"editTitle\")}\r\n                          onChange={handleChange(\"editTitle\")}\r\n                          value={values.editTitle}\r\n                        />\r\n                        <TextField\r\n                          id=\"outlined-multiline-flexible\"\r\n                          label=\"Description\"\r\n                          name=\"description\"\r\n                          multiline\r\n                          maxRows={4}\r\n                          className=\"p-4\"\r\n                          variant=\"standard\"\r\n                          onBlur={handleBlur(\"editDescription\")}\r\n                          onChange={handleChange(\"editDescription\")}\r\n                          value={values.editDescription}\r\n                        />\r\n\r\n                        <Button onClick={handleSubmit}>Edit</Button>\r\n                        {/* <EDITICON /> */}\r\n                      </div>\r\n                    )}\r\n                  </Formik>\r\n                </Dialog>\r\n              </Card>\r\n            );\r\n          })}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport HomeRoundedIcon from '@mui/icons-material/HomeRounded';\r\nimport EqualizerRoundedIcon from '@mui/icons-material/EqualizerRounded';\r\nimport FolderOpenRoundedIcon from '@mui/icons-material/FolderOpenRounded';\r\nimport TextsmsRoundedIcon from '@mui/icons-material/TextsmsRounded';\r\nimport DateRangeRoundedIcon from '@mui/icons-material/DateRangeRounded';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport TextField from '@mui/material/TextField';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport FilterListRoundedIcon from '@mui/icons-material/FilterListRounded';\r\nimport CARD from \"./Card\"\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport { useHistory } from 'react-router-dom';\r\n// import DialogContent from '@mui/material/DialogContent';\r\n// import DialogContentText from '@mui/material/DialogContentText';\r\n// import DialogTitle from '@mui/material/DialogTitle';\r\n\r\nconst Home = () => {\r\n      const history = useHistory();\r\n      const [open, setOpen] = useState(false);\r\n      const [taskData,settaskData]=useState([]);\r\n      // const taskData = [\r\n      //                   {_id:'1234',status: \"1\", title: 'test 1',description: 'none 1'},\r\n      //                   {_id:'1235',status: \"2\", title: 'test 2',description: 'none 2'},\r\n      //                   {_id:'1236',status: \"1\", title: 'test 1',description: 'none 1'},\r\n      //                   {_id:'1237',status: \"2\", title: 'test 2',description: 'none 2'},\r\n      //                   {_id:'1238',status: \"3\", title: 'test 3',description: 'none 3'},\r\n      //                   {_id:'1239',status: \"2\", title: 'test 2',description: 'none 2'},\r\n      //                   {_id:'1230',status: \"3\", title: 'test 3',description: 'none 3'}\r\n      //                   ]\r\n\r\n      const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n\r\n      useEffect(()=>{\r\n            fetch(\"/alltask\",{\r\n                headers:{\r\n                    \"Authorization\":\"iCareerD \"+localStorage.getItem(\"jwt\")\r\n                }\r\n            }).then(res=> res.json())\r\n            .then(result =>{\r\n            //     setPics(result.mypost)\r\n            // console.log(result.tasks)\r\n            settaskData(result.tasks)\r\n           \r\n            })\r\n          },[])\r\n    \r\n      const handleClose = (flag) => {\r\n            if(flag==='Y'){\r\n                localStorage.removeItem('jwt');\r\n                localStorage.removeItem('user');\r\n                history.push('/signin');\r\n\r\n            }\r\n            setOpen(false);\r\n      };\r\n      \r\n      return (\r\n            <div>\r\n                 <div className=\"container-fluid\">\r\n                       <div className=\"row\">\r\n                             <div id=\"make_border\" className=\"col-md-2 pb-5 p-3 pr-0\">\r\n                                   <h1>.taskez</h1>\r\n                                   <div className=\"row pt-5 pb-5 mb-5\">\r\n                                   <Box sx={{ width: '100%', maxWidth: 300, bgcolor: 'background.paper' }}>\r\n                                                <nav aria-label=\"main mailbox folders\">\r\n                                                <List>\r\n                                                <ListItem disablePadding>\r\n                                                      <ListItemButton>\r\n                                                      <ListItemIcon>\r\n                                                      <HomeRoundedIcon />\r\n                                                      </ListItemIcon>\r\n                                                      <ListItemText primary=\"Overview\" />\r\n                                                      </ListItemButton>\r\n                                                </ListItem>\r\n                                                <ListItem disablePadding>\r\n                                                      <ListItemButton>\r\n                                                      <ListItemIcon>\r\n                                                      <EqualizerRoundedIcon />\r\n                                                      </ListItemIcon>\r\n                                                      <ListItemText primary=\"Stats\" />\r\n                                                      </ListItemButton>\r\n                                                </ListItem>\r\n                                                <ListItem disablePadding>\r\n                                                      <ListItemButton>\r\n                                                      <ListItemIcon>\r\n                                                      <FolderOpenRoundedIcon />\r\n                                                      </ListItemIcon>\r\n                                                      <ListItemText primary=\"Projects\" />\r\n                                                      </ListItemButton>\r\n                                                </ListItem>\r\n                                                <ListItem disablePadding>\r\n                                                      <ListItemButton>\r\n                                                      <ListItemIcon>\r\n                                                      <TextsmsRoundedIcon />\r\n                                                      </ListItemIcon>\r\n                                                      <ListItemText primary=\"Chat\" />\r\n                                                      </ListItemButton>\r\n                                                </ListItem>\r\n                                                <ListItem disablePadding>\r\n                                                      <ListItemButton>\r\n                                                      <ListItemIcon>\r\n                                                      <DateRangeRoundedIcon />\r\n                                                      </ListItemIcon>\r\n                                                      <ListItemText primary=\"Calendar\" />\r\n                                                      </ListItemButton>\r\n                                                </ListItem>\r\n                                                </List>\r\n                                                </nav>\r\n                                          </Box>\r\n                                   </div>\r\n                                   <div id=\"logout_button\" className=\"row pt-5 mt-5\">\r\n                                   <Box sx={{ width: '100%', maxWidth: 300, bgcolor: 'background.paper' }}>\r\n                                          <nav aria-label=\"main mailbox folders\">\r\n                                          <List>\r\n                                          <ListItem disablePadding>\r\n                                                <ListItemButton>\r\n                                                <ListItemIcon>\r\n                                                <SettingsIcon />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText primary=\"Settings\" />\r\n                                                </ListItemButton>\r\n                                          </ListItem>\r\n                                          <ListItem disablePadding onClick={handleClickOpen}>\r\n                                                <ListItemButton>\r\n                                                <ListItemIcon>\r\n                                                <LogoutIcon />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText primary=\"Log Out\" />\r\n                                                </ListItemButton>\r\n                                          </ListItem>\r\n                                          <Dialog\r\n                                                open={open}\r\n                                                onClose={handleClose}\r\n                                                aria-labelledby=\"alert-dialog-title\"\r\n                                                aria-describedby=\"alert-dialog-description\"\r\n                                                >\r\n                                                <div className=\"p-5\">\r\n                                                <h1>Do you Want to Log out! </h1>\r\n                                                <DialogActions>\r\n                                                <Button onClick={()=>handleClose('Y')}>yes</Button>\r\n                                                <Button onClick={()=>handleClose('N')} autoFocus>\r\n                                                      No\r\n                                                </Button>\r\n                                                </DialogActions>\r\n                                                </div>\r\n                                                </Dialog>\r\n                                          </List>\r\n                                          </nav>\r\n                                    </Box>  \r\n                                   </div>\r\n                             </div>\r\n                             <div className=\"col-md-10\">\r\n                                   <div className=\"row p-3\">\r\n                                         <div className=\"row\">\r\n                                               <div className=\"col-4\">\r\n                                               <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                                                      <SearchIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\r\n                                                      <TextField id=\"input-with-sx\" label=\"search\" variant=\"standard\" />\r\n                                                </Box>\r\n                                    \r\n                                               </div>\r\n                                               <div className=\"col-4\">\r\n                                                     <h1>users</h1>\r\n                                                </div>\r\n                                                <div className=\"col-4\">\r\n                                                      <h1>user</h1>\r\n                                                </div>\r\n                                         </div>\r\n                                         <div className=\"row pt-5\">\r\n                                         <div class=\"d-flex justify-content-between\">\r\n                                         <h2>Project</h2>\r\n                                               <h2><FilterListRoundedIcon /> Filter</h2>\r\n                                         </div>\r\n                                              \r\n                                         </div>\r\n                                         <div className=\"row\">\r\n                                               <div className=\"col-md-4 p-3\">\r\n                                                <CARD heading=\"Project\" id={'3'} taskData={taskData} settaskData={settaskData}/>\r\n                                               </div>\r\n                                               <div className=\"col-md-4 p-3\">\r\n                                               <CARD heading=\"In Progress\" id={'2'} taskData={taskData} settaskData={settaskData}/>\r\n                                                </div>\r\n                                                <div className=\"col-md-4 p-3\">\r\n                                                <CARD heading=\"Completed\" id={'1'} taskData={taskData} settaskData={settaskData}/>\r\n                                                </div>\r\n                                         </div>\r\n                                   </div>\r\n                             </div>\r\n                       </div>\r\n                 </div>\r\n            </div>\r\n      )\r\n}\r\n\r\nexport default Home\r\n","import './App.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport React, { useEffect} from 'react';\r\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\r\nimport LandingPage from './components/LandingPage';\r\nimport HOME from \"./components/Home\";\r\n\r\n\r\n\r\nconst Routing = () => {\r\n  const history = useHistory();\r\n  // const {state,dispatch}=useContext(UserContext);\r\n  useEffect(()=>{\r\n     const user =JSON.parse( localStorage.getItem(\"user\"));\r\n     if(user){\r\n        // dispatch({type:\"USER\",payload:user})\r\n        history.push('/home');\r\n     }else{\r\n        history.push('/');\r\n\r\n     }\r\n  },[])\r\n\r\n  return (\r\n\r\n    <Switch>\r\n       <Route exact path=\"/\">\r\n          <LandingPage />\r\n       </Route>\r\n       <Route path=\"/signin\">\r\n          <LandingPage />\r\n       </Route>\r\n       <Route path=\"/signup\">\r\n          <LandingPage />\r\n       </Route>\r\n       <Route path=\"/home\">\r\n          <HOME />\r\n       </Route>\r\n    </Switch>\r\n\r\n\r\n )\r\n}\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n       <BrowserRouter>\r\n            <Routing />\r\n         </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n<App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}